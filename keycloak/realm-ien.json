{
  "id": "f426025a-a386-4920-89ec-5cbcda37695e",
  "realm": "ien",
  "displayName": "",
  "displayNameHtml": "",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "d0bcfb5f-39f5-4fa7-bea7-dfe0499f222c",
        "name": "default-roles-ehpr",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"],
          "client": {
            "account": ["manage-account", "view-profile"]
          }
        },
        "clientRole": false,
        "containerId": "f426025a-a386-4920-89ec-5cbcda37695e",
        "attributes": {}
      },
      {
        "id": "4be74c12-ccf8-4b8b-a8b7-4ac3f9f31f7d",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "f426025a-a386-4920-89ec-5cbcda37695e",
        "attributes": {}
      },
      {
        "id": "ed7c44d6-9c5e-49a4-ba70-715c9245dee9",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "f426025a-a386-4920-89ec-5cbcda37695e",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "e9676633-385c-45f6-9bff-438955854635",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-realm",
                "view-clients",
                "manage-events",
                "manage-clients",
                "manage-users",
                "create-client",
                "impersonation",
                "view-identity-providers",
                "view-authorization",
                "query-users",
                "query-groups",
                "view-events",
                "manage-realm",
                "view-users",
                "manage-authorization",
                "manage-identity-providers",
                "query-realms",
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        },
        {
          "id": "7480087b-42d5-4270-a441-f1b2ece58adf",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        },
        {
          "id": "5f23e270-f5f7-43f1-8082-c048db4ae8b3",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        },
        {
          "id": "dffdbd50-5409-49d9-a61f-5afc8e56b61d",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        },
        {
          "id": "9411863a-c9f6-480a-a24a-e04a77c00c9b",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        },
        {
          "id": "2e74d317-f8c8-49ce-9832-32d53c0dbc7f",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        },
        {
          "id": "0065dfa5-bdd2-4686-88a4-650994f989d9",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        },
        {
          "id": "3804b54a-c404-4ce5-ae10-5bde1c83a859",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        },
        {
          "id": "bab8a862-e2e2-4f12-a42b-0d3a0678b9cf",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        },
        {
          "id": "32ccaf98-4b79-4bb8-84d7-9b40a90a4582",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        },
        {
          "id": "6a3956b3-1c56-4d92-a136-e8e9b0a7aa83",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        },
        {
          "id": "3c20d52d-f313-4405-a349-e506011748af",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        },
        {
          "id": "cdbcab4a-2216-4b44-83e1-38441389c60e",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        },
        {
          "id": "ba8f8871-f795-49ab-9763-6fb30d6fadcf",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        },
        {
          "id": "4477151b-90e7-463d-bf7b-14c6117e430c",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-users", "query-groups"]
            }
          },
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        },
        {
          "id": "0fef6298-06e7-4c61-a850-3e2fe6d90506",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        },
        {
          "id": "3c7c0d37-1d15-47ce-843c-7a3c18a76337",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        },
        {
          "id": "7186bd36-e62d-4498-8dcc-54ca1658b2d8",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        },
        {
          "id": "6f3df1d7-6b43-483b-b966-684e113fac80",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
          "attributes": {}
        }
      ],
      "IEN": [
        {
          "id": "206fb84f-f661-48de-95bf-b11c7c946234",
          "name": "moh",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "2ee82d5c-3ba5-4ba1-a4b0-f139045b9a2b",
          "attributes": {}
        },
        {
          "id": "d32bc11b-bffb-4d15-9ebb-86799083d95c",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "2ee82d5c-3ba5-4ba1-a4b0-f139045b9a2b",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "e74cad9f-335d-44fd-a7dd-9a409b72d00e",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "b826cb14-3383-4ce3-8e93-447743aa9b71",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "cb95d25f-0300-4cf5-8e5e-4c3efcdda65c",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "2174fb50-0137-41b5-9de8-9152ae35dce1",
          "attributes": {}
        },
        {
          "id": "056e9b17-06b1-47b5-a273-bbd6add34c0b",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "2174fb50-0137-41b5-9de8-9152ae35dce1",
          "attributes": {}
        },
        {
          "id": "e8ee67bf-f180-436b-bbd7-e3340c4fee0f",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "2174fb50-0137-41b5-9de8-9152ae35dce1",
          "attributes": {}
        },
        {
          "id": "293f117a-aab9-4f13-975b-7250a325cccc",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "2174fb50-0137-41b5-9de8-9152ae35dce1",
          "attributes": {}
        },
        {
          "id": "7c621318-5cd3-47f5-81dd-abf5b907f526",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "2174fb50-0137-41b5-9de8-9152ae35dce1",
          "attributes": {}
        },
        {
          "id": "4c59f520-bb63-4bcd-bbae-55987e8d560c",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "2174fb50-0137-41b5-9de8-9152ae35dce1",
          "attributes": {}
        },
        {
          "id": "84cee9b2-4dbb-4b27-8348-c6dd203acd69",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "2174fb50-0137-41b5-9de8-9152ae35dce1",
          "attributes": {}
        },
        {
          "id": "3cdc839f-2eea-4721-b4ba-8b425ac3ad07",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "2174fb50-0137-41b5-9de8-9152ae35dce1",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "d0bcfb5f-39f5-4fa7-bea7-dfe0499f222c",
    "name": "default-roles-ehpr",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "f426025a-a386-4920-89ec-5cbcda37695e"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "61b95719-b3ab-4bb4-949f-14de050b9587",
      "createdTimestamp": 1693954541881,
      "username": "ien_e2e",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Cypress",
      "lastName": "Tester",
      "email": "ien@freshworks.io",
      "credentials": [
        {
          "id": "9b78a3e8-0f5e-4711-8c0a-3514c38f4f14",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1693955341062,
          "secretData": "{\"value\":\"KRfTgrB6oHVi1QIMlhS3bvGQZID5ZnVF9DUS5N0r4Ws=\",\"salt\":\"V4h86IHIGlNY4udeRPO3Yw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-ehpr"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "1f033ec7-6f82-4ea3-a680-83b74ca8576d",
      "createdTimestamp": 1693954582386,
      "username": "ien_e2e_hmbc",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "HMBC Cypress",
      "lastName": "Tester",
      "email": "ien-hmbc@freshworks.io",
      "credentials": [
        {
          "id": "32741690-bf93-4a6b-9860-0fe572006b73",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1693955549994,
          "secretData": "{\"value\":\"iWh+EMjspLdveYEL6VbWNpZ+ntkZhQomm4rXY/miktA=\",\"salt\":\"rYBV0RwkNHWA9lPei2xmRQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-ehpr"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "873d91ca-e05b-446e-b9fe-e22c0ed1ba18",
      "createdTimestamp": 1693954620302,
      "username": "ien_e2e_view",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Applicant Viewer",
      "lastName": "Tester",
      "email": "ien_e2e_view@phsa.ca",
      "credentials": [
        {
          "id": "3b1b7900-2ffe-48a0-a52b-271dacc20cf0",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1693955563776,
          "secretData": "{\"value\":\"lpywN7LC5HL+Ke7RXdecSiXqDlAFuU/VePbzW22PwaQ=\",\"salt\":\"kTYGPa1bIQtUCLyiwqbZUg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-ehpr"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "c16c29e8-1d2a-4e47-9f3a-fe86417e363e",
      "createdTimestamp": 1693954656263,
      "username": "ien_fha",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Fha",
      "lastName": "Ien",
      "email": "ien_fha@fraserhealth.org",
      "credentials": [
        {
          "id": "27a22f97-38ec-43a3-bc40-dd773f58cd78",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1693955583177,
          "secretData": "{\"value\":\"ql3bez7mp+cX3ht2Oupyf7OpXmN9chpjUx6r9BNH9bY=\",\"salt\":\"Ilz0HAAKmxII3q6ED26vNw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-ehpr"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "800bfe76-6af2-4900-86c9-6f33c7f211fe",
      "createdTimestamp": 1693954686686,
      "username": "ien_fha2",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Fha2",
      "lastName": "Ien",
      "email": "ien_fha2@fraserhealth.org",
      "credentials": [
        {
          "id": "40da57a0-e86a-4d93-859f-cb1fded77330",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1693955608874,
          "secretData": "{\"value\":\"sN845Rlqx3R0JsEymGng/+NoSqoa21R2bjxuBVRXzt0=\",\"salt\":\"+ycsnGtPkI4oNUN4mnlmrQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-ehpr"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "7671e670-46cd-4ac6-a3eb-e414b48dc695",
      "createdTimestamp": 1693954721112,
      "username": "ien_fnha",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Fnha",
      "lastName": "Ien",
      "email": "ien_fnha@fnha.ca",
      "credentials": [
        {
          "id": "2655bf22-0036-4f5a-a118-e28ed7a96d18",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1693955631636,
          "secretData": "{\"value\":\"4GKLYIdfV3GG53WiCRYM1A2Pavao7M41C90MclG15Po=\",\"salt\":\"yH7YrWp7vaeyiQIO7CKFvA==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-ehpr"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "805e7530-4a0d-4f11-9eb1-a13066e45a5e",
      "createdTimestamp": 1693954763700,
      "username": "ien_hmbc",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Hmbc",
      "lastName": "Ien",
      "email": "ien_hmbc@healthmatchbc.org",
      "credentials": [
        {
          "id": "0a090417-e469-4454-9f45-daf84d782b47",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1693955650366,
          "secretData": "{\"value\":\"euB2DpxgYe22+LibhkN+M89M8FdI/QnUmZvOWlYo8As=\",\"salt\":\"Uui2rJ38RxTBZNiyRLIAcQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-ehpr"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "8ce0e43e-1918-43d2-9874-cafb5a10c959",
      "createdTimestamp": 1693954797892,
      "username": "ien_moh",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Moh",
      "lastName": "Ien",
      "email": "ien_moh@gov.bc.ca",
      "credentials": [
        {
          "id": "52dea919-e719-44e1-8d13-6ba0b98aff1a",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1693955665021,
          "secretData": "{\"value\":\"3Kfi//iqXiDUT1EtkASwI50EYjK5ud01WtHzgdrEz7I=\",\"salt\":\"cJcpm4ZHZtxQFLNHVInbPw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-ehpr"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "33d61878-462b-463c-bda7-1f9835bbfa19",
      "createdTimestamp": 1694017626490,
      "username": "ien_viha",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Viha",
      "lastName": "Ien",
      "email": "ien_viha@islandhealth.ca",
      "credentials": [
        {
          "id": "3ecebce8-783c-43ce-9a9f-ae30b57ceb40",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1694017643516,
          "secretData": "{\"value\":\"CuhtmOR68YCxJNWEDFecq+PpUBOYewKq80xEir0X7GA=\",\"salt\":\"k8+DPIqBzGDYF3Gz79HPOQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-ehpr"],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "2ee82d5c-3ba5-4ba1-a4b0-f139045b9a2b",
      "clientId": "IEN",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["*"],
      "webOrigins": ["*"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1692386011",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "*",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "d6a3e4fa-b9c0-4328-a3a5-c3e60f9b891c",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dabab80e-d92a-4770-8f4d-2a29b01ebb02",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0cffd37c-b255-4275-b057-6bdbd012071d",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "2174fb50-0137-41b5-9de8-9152ae35dce1",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/ien/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/ien/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "bbae694f-c6c7-44de-bd3e-72042e30e882",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "description": "",
      "rootUrl": "${authBaseUrl}",
      "adminUrl": "",
      "baseUrl": "/realms/ien/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/ien/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "pkce.code.challenge.method": "S256",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "c14fee2c-dec1-4eb3-aa3d-59b0420ef8cf",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "63f66957-6406-4d39-97bf-db4d7e6321dd",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "b826cb14-3383-4ce3-8e93-447743aa9b71",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "09a539c4-22b6-4c46-aab7-d4a48ab7a56b",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "2d0f37a8-a1dd-4e19-a898-4df71eb9f9a2",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/ien/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/ien/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "74fb67eb-7374-4a11-9802-7a322e1e5e8c",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    }
  ],
  "clientScopes": [
    {
      "id": "9209bfb4-51f2-4d10-887b-70c82fd633bf",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "843e02a9-b2a2-41d2-974e-09e27e66fd86",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "cee4ed60-60e2-4c41-909d-b954d477cc54",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "e63455be-8af3-41b2-9b18-886b34c86334",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "273b2f10-3ccd-43c7-9037-0cfd43fbfe61",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "3b94796a-ad6e-495f-87e4-d19d6e242e05",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "69b3f0f8-71d1-4b80-a4fd-dbf7f2a7770d",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "b5d1844f-6a20-4a01-b31e-c00cf6a14f32",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "9c9cf32b-dd1c-49f3-9df5-26f1476b8da1",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "92e52d84-b227-4373-85c5-eea25e44349d",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "662e8eab-758e-4135-a604-d428ad4498c1",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b40bbdfe-4a23-4b5d-90f5-3ad788410a29",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d7f65689-78be-4bbb-8026-701f930b3c21",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "92904c1d-7da8-4e7c-b30b-aa3cfc7f4788",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9586bdc8-df52-4a08-967c-9f4f4768914f",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ffb50da7-ee1c-4043-9e52-5ab8d8afe4dc",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "768466b7-cb17-461a-a3e4-feda12e13651",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "78f6ccaf-232e-42cb-b01f-2689156776a7",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8d77a59d-3103-4cab-80df-d71d0e39ead4",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f078e6bb-1de1-47b0-9e85-50fe92464d34",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5dbf1f7e-62b3-42ec-84e6-1c7bbafa74c9",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c38ed818-65c1-4840-92f7-643a0f5a8360",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "906abecb-4aba-4e05-b446-2270c23f7bfc",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "90f16550-e2e2-4d19-92f5-336d7cde0fcd",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "c11ee65a-5586-44c0-920e-f9def5799389",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "5b0c12bc-ef0a-4213-b65b-0f2d94793040",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "13d4bc25-7505-4b2d-8891-5efb544a2004",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0f9bff0b-abb2-4333-a206-0c95539b8ca2",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "2be144c7-66ed-47fb-8a53-f54a540b28f4",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "a3822bc0-d4a3-4707-b12f-2ea70009fdd0",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "9cf0074f-a3f0-4480-b8cb-9963b7e12d59",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "7e46bc92-002d-4f3c-a00b-c91e1d8650a4",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "1ee101f5-06cc-4794-98fc-2a2bf15c30a7",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "f9c71050-b8cc-4fa0-a3b0-a9df886a933f",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ed8e710c-3d12-4bc6-bd78-b82351317a50",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "0c60f9fe-6350-4a34-9d9c-dd087ae72ce7",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "d74ed767-2344-48c8-9fa0-4a503e6ff1f0",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": ["role_list", "profile", "email", "roles", "web-origins", "acr"],
  "defaultOptionalClientScopes": ["offline_access", "address", "phone", "microprofile-jwt"],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self' http://localhost:3000; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "e6d52c7f-f384-4255-9638-d60f73e4532a",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "b2a5eaca-6ec0-4a07-b808-fa7aba657a31",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper"
          ]
        }
      },
      {
        "id": "9778254c-b383-4ca4-95a1-3ed1ff3cbd37",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "fa69a0ef-54d5-4470-9cd7-e15e476d51e7",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "e5efab14-ef3a-4eb9-98ff-ed6018d1ae88",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "1b56ea85-064c-4a08-9653-d5cdd9fb7d8d",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "3d254910-6f76-4d4d-b103-4fd8eb1caed1",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "ad058133-47fb-499e-b93f-e598a3917ce3",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper"
          ]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "04df4bc4-a79e-4a46-936d-7c59e6ab1589",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "7f274dcb-9a0f-430d-a6f7-ec629f2406c2",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEoQIBAAKCAQEA66JTTbLWfxRtyBwhfKK9dw5hIHCEB3F7A34bUhDfsOgoZaPgweUGqnWh6a+S4ejfM0jZUU7C+o06x7FZ/hpZy6yEOIKLvt9st+E1UhZG92KOmDQmRPe4fKrx4DfY3gV+cF/DSN5VHbpehidou2NCiSMWBmXdsGBNDZx2BCVsgTLw+q1R/fHrCCEt0fHAyxj1J/K0zny9V3+rmkF2w3VYAApLaAN6mDseekxdSmlVf4cg+P6HQc3ePI8rIFShuLEPjuWgcVFW5/85hGP0NVE1Nnrqw7ZcRlgsr7Yr1J/q6lW2xBMxAlJIzhQhwoYROW2nsObfKF6WNi7J3V24SPML4QIDAQABAoIBABajukbDGc5Mb27UWxhPR45ulIDqJplTeyr+/Q+BvQhRif4YBIKEp4MNudCK1L09Y2KZS33/KAcsNhtVLC0YqYuC6BJI4rXkYBz7t6SLLObccpBnpEyok3Jw9zvgicbtNrSD0u7Ho9xvGWFg3HRyqUQlWZqkQ2xMmGKoJ4Om99mi1OMn2sVYXinriFjWqcpysc1aM4CuWaVXvD6DegXQPpydcFnnqf9u3YzFGXxguBUwNKinAd9QcdNida/hkpCd8hPbQm02XURN5n26IcU8hXD/+b32n7JaZQig2X0cPkMDftYyfPiuyRtNR7bpCcSvJ/hvxLxOuU0zlGp9THsRBcUCgYEA/H0q3V1NpeNVEJVRgEPEZPQfdk2NujB53SkYz+jFz+NzL0oCHG1hLK4lvlJM/9LYl8bEjtsuixFHiIBVnswWWKsXt7w5/tY/V1UO75aX1GnOqnJhKAwYIijCwCHW1HvFlf/JhIembKwnHCmwaJL48PHHro8exElg5dAwvZEN5Q0CgYEA7ukoFJxJLiGG1fuBRvU5Sxh+fh/vRgDSNeayODzzRHdKoJczL3hbccQ8ujWlLIEJPtUJUHqct5sxozNc+sPYrR7DEqe+hZt0VTcvENzgCN6/blUeiSDOV2LdA7j54UDyYQkvsqwZM8sRs/ZfoKHIl0E7Nw9Qz0urYR3I+izKdSUCf0MQ/FHQds+Zkv7UqtFnLsOiFLlX4E2UksosIGsZaXHO+MmW3viuFSHJID1tnwZU+zNVmOBZWAOYk2eurw9/JnBnAeXMGZuXTTvlXBJH7gx+Dmc3+paon8BzE0f1tRq7xcASMXUCkzJKiBjy+ejNIVLe5it32LRKyXJB2rB/1zECgYEA1Rnhp2i0GdLL66h36qwnm6VQhv3DNsTavDt3spQjRWnGhjH39Rq9LmAk7s+U8npynbn2ofOMQHXMs87H2+G/LsRmqgg3+ALupGghsj/iEedmB2sjXpuFkgrcK0rekJ6W1BkWk5/QpxM2SjizmZtVSh1kTTt7EDxltK2VrBkxyYUCgYBV2j28TbarunzEQiVPz3dSr58fz+HssKFY9IhT4xr8wkX4zK3h9PxPLGGtX0JDoJhdGqU5X2Gy+Cds1iigOLhXwcI/fXwp3anhnbSb7EVhyhFQR+ospdNW8FnvOh6Z3qJ7V6pwfDZ3JI7L46sr9W1VHcrXmJWZN33mu7kB8iu4Aw=="
          ],
          "keyUse": ["SIG"],
          "certificate": [
            "MIIClzCCAX8CBgGKCdPR4jANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDARlaHByMB4XDTIzMDgxODE4MDQ1MVoXDTMzMDgxODE4MDYzMVowDzENMAsGA1UEAwwEZWhwcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOuiU02y1n8UbcgcIXyivXcOYSBwhAdxewN+G1IQ37DoKGWj4MHlBqp1oemvkuHo3zNI2VFOwvqNOsexWf4aWcushDiCi77fbLfhNVIWRvdijpg0JkT3uHyq8eA32N4FfnBfw0jeVR26XoYnaLtjQokjFgZl3bBgTQ2cdgQlbIEy8PqtUf3x6wghLdHxwMsY9SfytM58vVd/q5pBdsN1WAAKS2gDepg7HnpMXUppVX+HIPj+h0HN3jyPKyBUobixD47loHFRVuf/OYRj9DVRNTZ66sO2XEZYLK+2K9Sf6upVtsQTMQJSSM4UIcKGETltp7Dm3yheljYuyd1duEjzC+ECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAyefdJ7tEnWIgpZGfctbp/BGLIHbsSrOoA1cA0YGDuysa9VYsHa54SRw6+g+QZeGlT2WpNBEwZ7ml1wI9U5U9Wb7TInD+b1xZsxLlAzyqyXOqbWvAbdZZxmiGFla++4MjGd2JH4nudwtgRl4aqXk/UTf53iXxpU1Sza6JP9KJNF6NbzirkInVcdMpW07ScG8QXHf7weytxKP4vlIXvgZghQpPPBb2Vo9jG4vPyJcc9H5kcYs+YNgPot2PS8yESjyVjGnSTIk6/zX620OXe5S5Y/GiD8aFMW5OnBSOPvFfmjTDe2tguTVkt9sDdoN9F5DGXqKvd/oK8+90oLy0RxVU5Q=="
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "670c53fe-e7c1-4078-b454-93fbe77002fd",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["30ad9a6b-57d2-4307-8eb6-ca1e76a5d166"],
          "secret": ["CtvjUkaSxi9vVrDk3scu4g"],
          "priority": ["100"]
        }
      },
      {
        "id": "7e9edc8a-7f26-4d31-b4ae-f178be6c0fb4",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAoKvxjh2v/cuhO/vLQYueNGhtYgXGumZ9pJThBi3t3VYm13fE7UeAcBbCZoph7g6BNtgxWUQXQpP+pu9mVFbWs4VECEHUZJEXCj4Gqkk1tS1erT9XoB6IZ3qBLhe4jX3/rrfMLuWV++9NbunseeoMdHRKbatYlklbCW69lSHfa8wH6RHWpSlhMxdQwDtfYrZkM10yDXXouuwXaiG9gt6e61+h/yL0h/bB6ZcUckZ1YAdGhllnvS6rBlWJRe1mdK+8tUgdH9m4ccAwnBejpzSabOYnxV9ZPiOMR7KcyInqUYhPNt/sFp9BpkWYIVXGzPPKxTsaMd91bqjYjiqXfkZZlQIDAQABAoIBACMjv9p+XS+DYdHB3cAJ1lGtdiDOVRqO0FNWuUk18dQq46dTuzbO4MUDAUTWZpkfRHzXdyGIDhNCVVsyuB1heab9EjZBGX/eKJ0VmDUVemDT2aVH2XT8QIZrKUYIq5UMdcdDTO2DylP1kCieEhlOyicNCPsn0qHZzMaJGP79D8VeGwP2sCjBWYDhxfyufCGNBXonN3gU3Kj1HYUW73yW2AmHzQXIwD9RdtTtaypxQ5VINosGwg/YKHfzi9uNoSXbkS1UjeJbM6gUyS9T5AYNB+do5kwRT7wJsu4BI1CS5BQSv4Xap446Xa8BBkpQ3ttqOg8SdOLCG601vdFpqOV6WbECgYEA2KSs5DRdgJdOILeyq5ITJ/NKjo3MBg+uhlShPHs7+yAzz1NCoPqjSiMPZz6fgW87J2WKJEz9cv4F7b2iTxzGGNehhFkEfv9XjEzCJeFt4PknJnIy8VO4H2HPc1v29b29y+rM+WWaXyzvMwYJh7CYzKVMwaDhgGn3WxXi0IBEb2UCgYEAvdw5L7rsDG8qTWbA4tvtYOfukSsdXPM2syLPE2WRK4AfvB7zlX8a8gdQkhHP5dWbt9YSN3ci1wnnnif3kAlTp8UrMbx3wDoE/jM6n2sfvOMLFUIENbQSNBfh4Qt69iG+2SRkwozoCprCg1s6FEjyg2ZAlfC8+PtvH8weSBzclnECgYACB5jvEmaF2+UJfW8ZGGdBio/6Qe3VaLQz4fsYu/bV5XlWyern4zFAco+kYfvQlKAzQEpJCMefGi4oCgzJPPXGKc8DlGnsXqwNTnLLNA95ehwZyhwcErK46IuvAv+PUdXDYVHGTGNj3OHo0neoY8kqsanEbqNuNo/wtIXJekop2QKBgE4981M4NQ7qwQQk1FipSaol6qrombE0idZJAg18TdcfdfSQzNFPEEutuAZ6ULLm1MVt8xPohPMZodoLnno9XbxGBQb6JF+TiXs4oXARNYMiDe80xYdcLiRJs0yK7qGARqY12VBTwUydeounjMfPSCHegb9I9pelBqaT9+a//igBAoGBALbebifjO6aYAS2KqDZE06BNBbG7Fga9qKrBoH7us6FWJRPNNpNIjXIpGnF8zMBlWMTfny5aIrir26ncsXRXSp9jsDxvGHoHYRrhLZTHjJIXbFhfioO6dOEXMtkN3YDGTeJEv0yRSQVnlmeFuFQaew9AY1fL1OKAu+/MvS+k8Rm8"
          ],
          "keyUse": ["ENC"],
          "certificate": [
            "MIIClzCCAX8CBgGKCdPSWjANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDARlaHByMB4XDTIzMDgxODE4MDQ1MVoXDTMzMDgxODE4MDYzMVowDzENMAsGA1UEAwwEZWhwcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKCr8Y4dr/3LoTv7y0GLnjRobWIFxrpmfaSU4QYt7d1WJtd3xO1HgHAWwmaKYe4OgTbYMVlEF0KT/qbvZlRW1rOFRAhB1GSRFwo+BqpJNbUtXq0/V6AeiGd6gS4XuI19/663zC7llfvvTW7p7HnqDHR0Sm2rWJZJWwluvZUh32vMB+kR1qUpYTMXUMA7X2K2ZDNdMg116LrsF2ohvYLenutfof8i9If2wemXFHJGdWAHRoZZZ70uqwZViUXtZnSvvLVIHR/ZuHHAMJwXo6c0mmzmJ8VfWT4jjEeynMiJ6lGITzbf7BafQaZFmCFVxszzysU7GjHfdW6o2I4ql35GWZUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAdojGwQWXqYW/O+46/bAIRCBFHucc9sN/Ppq53ZeC+RxYOz789weMQ/OBsVxmoPLfJkM1O0XS/O3DJxpFg88CDmZWtkvtsDHZr00M42bmXhIQssCC9HY9AB69jkDkGSHO9nVSaFGQ2h0WTFgYcwg4GPrUXDwZNDJromc6Zp/9EcDR1fk83E/trG1zkX9akhWma8XAeeqHdoSaf0DgH/J8NO3bLEJ5Wpl6F/NGEW3Jvkm2uuQac0SQTi5jmu5tlq07Kzch3gJz8OpoYvcNTvOCpyzEvyFsRTIT+r+ThEJyp2FHmxsB/bACYDaXxulh7P88k7Jb6u00ONd5dIeAw7XFMg=="
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      },
      {
        "id": "c50b452e-eaf4-4fcd-9657-db0e9da18b65",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["730dcb95-bda0-460b-8ee3-621384d0c8f9"],
          "secret": [
            "yDimcJlhhDBhhPeWSfiW0pvineWTTCr2l6a4XamXOZz5b8k52A82Vdichm6kYk3sEeWTBpOwZOKyWlAj3YpZiQ"
          ],
          "priority": ["100"],
          "algorithm": ["HS256"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "75a38171-c91b-4510-afb0-753a8ed62b4d",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5b91577e-2982-47cf-a0b7-578afcd8ed0c",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8f735975-00e3-44aa-874e-d7aac8d3c824",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d5c4c81a-16fb-48ac-9b87-764f893159c1",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5ab04efb-583a-4471-b6a5-6524002bb679",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "171bd867-7b50-4637-aea6-f14e61e0b76d",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8750565f-4d01-40ed-b0b1-bbc937478a49",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8e029748-e219-49ef-a620-2d4433d9ef99",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2d9e55e2-621e-4362-9c80-76a767db9cb0",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1cdb4c58-2c05-4b7d-8b84-48792ee9a7e3",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "00e49a35-01de-4c27-9e1a-d006d6d3d718",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5bf88781-cc1b-40bc-8008-dc8792881070",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "228e82b3-341e-4877-9ee2-e932c1bcc367",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7149050f-21ce-4c2e-8f56-c251d4e92506",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "963c4b79-95af-43bf-a5e3-544f0c90c3c7",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c0178d63-d74f-4b34-a7b5-e0a3280261a7",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "67b397c0-bd11-4df4-983a-5ead49098644",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b50f4eea-3685-4dbb-b565-1026acf4dd3a",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "0dc40252-4fa0-4463-a9e2-ce40f1ed564d",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "e91972da-7917-4275-b79a-a16f23e60d68",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "frontendUrl": "",
    "acr.loa.map": "{}"
  },
  "keycloakVersion": "22.0.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
